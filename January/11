/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans = 0;
    int maxAncestorDiff(TreeNode* root) {
        int small = root->val, large = root->val;
        dfs(root, small, large);
        return ans;
    }

    void dfs(TreeNode* root, int small, int large) {
        if (!root) return;

        ans = max(ans, max(abs(small - root->val), abs(large - root->val)));
        small = min(small, root->val);
        large = max(large, root->val);
        dfs(root->left, small, large);
        dfs(root->right, small, large);
    }
};
