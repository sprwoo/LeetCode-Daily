/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> first, second;
        traverse(root1, first);
        traverse(root2, second);

        return first == second;
    }

    void traverse(TreeNode* root, vector<int>& ans) {
        if (root->left == NULL && root->right == NULL) {
            ans.push_back(root->val);
        }

        if (root->left != NULL) {
            traverse(root->left, ans);
        }
        if (root->right != NULL) {
            traverse(root->right, ans);
        }

        return;
    }
};
